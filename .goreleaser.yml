version: 2

project_name: arrbiter

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: arrbiter
    binary: arrbiter
    main: ./main.go
    goos:
      - linux
      - windows
      - darwin
      - freebsd
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "6"
      - "7"
    ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
      - goos: darwin
        goarch: arm
      - goos: freebsd
        goarch: arm
      - goos: freebsd
        goarch: arm64
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}

archives:
  - id: arrbiter
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    formats: ['tar.gz']
    format_overrides:
      - goos: windows
        formats: ['zip']
    files:
      - README.md
      - LICENSE*
      - config.yaml.example

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_checksums.txt"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: '🚀 New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: '🐛 Bug Fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 10
    - title: '🔧 Maintenance'
      regexp: "^.*chore[(\\w)]*:+.*$"
      order: 20
    - title: '🔒 Security'
      regexp: "^.*security[(\\w)]*:+.*$"
      order: 30
    - title: '⚡ Performance'
      regexp: "^.*perf[(\\w)]*:+.*$"
      order: 40
    - title: '📝 Documentation'
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 50
    - title: '🔄 Other Changes'
      order: 999

homebrew_casks:
  - name: arrbiter
    directory: Casks
    repository:
      owner: s0up4200
      name: arrbiter
    commit_author:
      name: goreleaserbot
      email: goreleaserbot@users.noreply.github.com
    commit_msg_template: "Brew cask update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://github.com/s0up4200/arrbiter"
    description: "Your media library's arbiter of taste - A CLI tool for managing Radarr movies with advanced filtering"
    license: "MIT"

release:
  prerelease: auto
  header: |
    ## Arrbiter {{ .Tag }}

    Arrbiter is a CLI tool for managing Radarr movies with advanced filtering and Tautulli integration.

  footer: |
    **Full Changelog**: https://github.com/s0up4200/arrbiter/compare/{{ .PreviousTag }}...{{ .Tag }}

    ## 📦 Installation

    ### Homebrew
    ```bash
    brew tap s0up4200/arrbiter
    brew install arrbiter
    ```

    ### Binary
    Download the appropriate binary for your platform from the assets below.

    ### Go Install
    ```bash
    go install github.com/s0up4200/arrbiter@{{ .Tag }}
    ```

    ## 📚 Resources

    - [Documentation](https://github.com/s0up4200/arrbiter#readme)
    - [GitHub Issues](https://github.com/s0up4200/arrbiter/issues)

    ## 💝 Support the project

    If you find Arrbiter useful, consider:
    - Starring the repository
    - Contributing to the project
    - Sharing your feedback